"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[2858],{741:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=n(4848),i=n(8453);const s={sidebar_position:5},o="Drift Detection",a={id:"admin/drift",title:"Drift Detection",description:"Drift detection periodically runs a terraform plan on a Configuration, ensuring the expected state (terraform state) and the actual cloud resources are in sync. Currently Configurations must opt in for drift detection via their spec;",source:"@site/docs/terranetes-controller/admin/drift.md",sourceDirName:"admin",slug:"/admin/drift",permalink:"/terranetes-controller/admin/drift",draft:!1,unlisted:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/admin/drift.md",tags:[],version:"current",lastUpdatedBy:"Kashif Saadat",lastUpdatedAt:172356685e4,sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Injecting Defaults",permalink:"/terranetes-controller/admin/defaults"},next:{title:"Terraform State",permalink:"/terranetes-controller/admin/state"}},l={},c=[{value:"Tuning Drift Detection",id:"tuning-drift-detection",level:2},{value:"Drift Intervals",id:"drift-intervals",level:3},{value:"Drift Threshold",id:"drift-threshold",level:3},{value:"Selection Process",id:"selection-process",level:3}];function d(e){const r={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"drift-detection",children:"Drift Detection"}),"\n",(0,t.jsxs)(r.p,{children:["Drift detection periodically runs a terraform plan on a ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"}),", ensuring the expected state ",(0,t.jsx)(r.em,{children:"(terraform state)"})," and the actual cloud resources are in sync. Currently ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configurations"})," must opt in for drift detection via their spec;"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-yaml",children:"apiVersion: terraform.appvia.io/v1alpha1\nkind: Configuration\nmetadata:\n  name: bucket\nspec:\n  module: https://github.com/terraform-aws-modules/terraform-aws-s3-bucket.git?ref=v3.1.0\n  providerRef:\n    namespace: terraform-system\n    name: aws\n  # You can enable drift protection as so\n  enableDriftDetection: true\n"})}),"\n",(0,t.jsx)(r.h2,{id:"tuning-drift-detection",children:"Tuning Drift Detection"}),"\n",(0,t.jsx)(r.p,{children:"From an administrative perspective the controller exposes two options:"}),"\n",(0,t.jsx)(r.h3,{id:"drift-intervals",children:"Drift Intervals"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"driftInterval"})," is the amount of time that must pass from the ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration's"})," last terraform plan (last transition time recorded within the status of the ",(0,t.jsx)(r.code,{children:"Configuration"})," object), before a new check is run. By default this is ",(0,t.jsx)(r.code,{children:"3h"}),", so every three hours that has passed from the last transition time for a given ",(0,t.jsx)(r.code,{children:"Configuration"})," object, a drift check will be ran against this resource (providing it is within the ",(0,t.jsx)(r.a,{href:"#drift-threshold",children:(0,t.jsx)(r.code,{children:"driftThreshold"})}),")."]}),"\n",(0,t.jsx)(r.admonition,{type:"important",children:(0,t.jsxs)(r.p,{children:["The check is always from the last terraform plan run. So if the ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," is altered within those 3 hours, the clocks restarts and will be 3 hours from then."]})}),"\n",(0,t.jsxs)(r.p,{children:["You can configure the drift interval via the helm value ",(0,t.jsx)(r.code,{children:"controller.driftInterval"}),"; the format must be in minutes or hours, i.e. 10m or 10h"]}),"\n",(0,t.jsx)(r.h3,{id:"drift-threshold",children:"Drift Threshold"}),"\n",(0,t.jsxs)(r.p,{children:["The ",(0,t.jsx)(r.code,{children:"driftThreshold"})," is a configurable threshold used to ensure we dont overwhelm the cloud provider API with drift checks. These checks are performing a ",(0,t.jsx)(r.code,{children:"terraform plan"})," afterall and thus API requests are sent out to the cloud provider, so a large collection of ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configurations"})," all confirming at the same time could cause API timeouts and retries due to rate limiting."]}),"\n",(0,t.jsxs)(r.p,{children:["The threshold is a percentage, expressed as a float between 0 and 1. This sets the maximum number of ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," that can run a drift check at anyone time."]}),"\n",(0,t.jsxs)(r.p,{children:["This value takes into account ",(0,t.jsxs)(r.strong,{children:["all ",(0,t.jsx)(r.code,{children:"Configuration"})," resources"]}),", not just those with ",(0,t.jsx)(r.code,{children:"enableDriftDetection"}),", as the intention is to protect against Cloud API limits."]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Scenario 1:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["10 ",(0,t.jsx)(r.code,{children:"Configuration"})," resources"]}),"\n",(0,t.jsx)(r.li,{children:"1 resource currently in progress (terraform plan or apply is executing)"}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"driftThreshold: 0.2"})," (10 * 20% - maximum 2 resources)"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Result:"})," A resource with ",(0,t.jsx)(r.code,{children:"enableDriftCheck"})," will execute a check because it is below the threshold"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Scenario 2:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["10 ",(0,t.jsx)(r.code,{children:"Configuration"})," Resources"]}),"\n",(0,t.jsx)(r.li,{children:"2 resources currently in progress (terraform plan or apply is executing)"}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"driftThreshold: 0.2"})," (10 * 20% - maximum 2 resources)"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Result:"})," A resource with ",(0,t.jsx)(r.code,{children:"enableDriftCheck"})," will not execute a check because the threshold is currently met. It will be evaluated again after a fixed 5 minute interval."]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Scenario 3:"})}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["10 ",(0,t.jsx)(r.code,{children:"Configuration"})," Resources"]}),"\n",(0,t.jsx)(r.li,{children:"0 resources currently in progress (terraform plan or apply is executing)"}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.code,{children:"driftThreshold: 0.01"})," (10 * 1% - maximum 1 resource)"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.strong,{children:"Result:"})," A resource with ",(0,t.jsx)(r.code,{children:"enableDriftCheck"})," will execute because none are currently in progress, and the maximum resources that can be run is rounded upwards to a value of 1."]}),"\n"]}),"\n",(0,t.jsx)(r.h3,{id:"selection-process",children:"Selection Process"}),"\n",(0,t.jsxs)(r.p,{children:["The controller chooses a ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," based on the following:"]}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:["Drift detection is enabled on the spec i.e. ",(0,t.jsx)(r.code,{children:"spec.enableDriftDetection: true"}),"."]}),"\n",(0,t.jsx)(r.li,{children:"The configuration has already ran successfully, i.e. a plan, approve and apply."}),"\n",(0,t.jsx)(r.li,{children:"The last time a plan ran was >= drift interval."}),"\n",(0,t.jsx)(r.li,{children:"Assuming the number of currently running terraform plan or apply actions is below the drift threshold, the configuration is selected."}),"\n"]}),"\n",(0,t.jsxs)(r.p,{children:["The selection process is not ordered in any way, the controller makes a best effort approach, knowing eventually all the ",(0,t.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," resources will be run in the end."]})]})}function h(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},8453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>a});var t=n(6540);const i={},s=t.createContext(i);function o(e){const r=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(s.Provider,{value:r},e.children)}}}]);