"use strict";(self.webpackChunkterraform_controller_docs=self.webpackChunkterraform_controller_docs||[]).push([[825],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return f}});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),p=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=p(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},s=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),s=p(r),f=o,d=s["".concat(c,".").concat(f)]||s[f]||u[f]||a;return r?n.createElement(d,i(i({ref:t},m),{},{components:r})):n.createElement(d,i({ref:t},m))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,i=new Array(a);i[0]=s;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var p=2;p<a;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}s.displayName="MDXCreateElement"},4412:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return f},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var n=r(7462),o=r(3366),a=(r(7294),r(3905)),i=["components"],l={},c="Customize Job Template",p={unversionedId:"admin/template",id:"admin/template",title:"Customize Job Template",description:"When a configuration is changed (i.e. for plan, apply or destroy), the controller uses a template to render the final job configuration, taking the options provided on the controller command line, custom policies and the terraform configuration itself. A batch job is created from all the options and ordered to execute the change. You can find the default template for this here.",source:"@site/docs/terraform-controller/admin/template.md",sourceDirName:"admin",slug:"/admin/template",permalink:"/terraform-controller/admin/template",draft:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terraform-controller/admin/template.md",tags:[],version:"current",lastUpdatedBy:"Rohith Jayawardene",lastUpdatedAt:1655237818,formattedLastUpdatedAt:"6/14/2022",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Metrics",permalink:"/terraform-controller/admin/observability/metrics"},next:{title:"Developer Docs",permalink:"/terraform-controller/category/developer-docs"}},m={},u=[{value:"Overriding the template",id:"overriding-the-template",level:3}],s={toc:u};function f(e){var t=e.components,r=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,n.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"customize-job-template"},"Customize Job Template"),(0,a.kt)("p",null,"When a configuration is changed (i.e. for plan, apply or destroy), the controller uses a template to render the final job configuration, taking the options provided on the controller command line, custom policies and the terraform configuration itself. A batch job is created from all the options and ordered to execute the change. You can find the default template for this ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/appvia/terraform-controller/blob/master/pkg/assets/job.yaml.tpl"},"here"),"."),(0,a.kt)("h3",{id:"overriding-the-template"},"Overriding the template"),(0,a.kt)("p",null,"While not required in the vast majority of cases this template can be overridden, allowing platform engineers to customize the pipeline. You might want to:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Add a notification on failed configuration, or send a notification when a configuration fails policy."),(0,a.kt)("li",{parentName:"ul"},"Add a new feature into the pipeline such as swapping out the default ",(0,a.kt)("a",{parentName:"li",href:"https://www.checkov.io"},"checkov")," for another policy engine.")),(0,a.kt)("p",null,"You can change the template by uploading a configmap into the namespace where the controller lives:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"# create the template configmap (note the key name of job.yaml)\n$ kubectl -n terraform-system create configmap template --from-file=job.yaml=<PATH>\n\n# update the helm values to override the template\ncontroller:\n  templates:\n    job: <NAME_OF_CONFIG_MAP>\n")))}f.isMDXComponent=!0}}]);