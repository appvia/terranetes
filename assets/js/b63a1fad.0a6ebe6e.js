"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[4585],{64:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var i=r(4848),n=r(8453);const o={sidebar_position:2},s="Platform Team",a={id:"workflows/platform",title:"Platform Team",description:"Setting up workflows",source:"@site/docs/terranetes-controller/workflows/platform.md",sourceDirName:"workflows",slug:"/workflows/platform",permalink:"/terranetes-controller/workflows/platform",draft:!1,unlisted:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/workflows/platform.md",tags:[],version:"current",lastUpdatedBy:"Kashif Saadat",lastUpdatedAt:172356019e4,sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"What are workflows",permalink:"/terranetes-controller/workflows/intro"},next:{title:"Developer",permalink:"/terranetes-controller/workflows/developer"}},l={},c=[{value:"Setting up workflows",id:"setting-up-workflows",level:2},{value:"Current Checks",id:"current-checks",level:3},{value:"On the Roadmap",id:"on-the-roadmap",level:3},{value:"Authoring a module",id:"authoring-a-module",level:2},{value:"Create the module",id:"create-the-module",level:3},{value:"Adding the code",id:"adding-the-code",level:3},{value:"Publish the artifact",id:"publish-the-artifact",level:3},{value:"Find the artifact",id:"find-the-artifact",level:3}];function h(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"platform-team",children:"Platform Team"}),"\n",(0,i.jsx)(t.h2,{id:"setting-up-workflows",children:"Setting up workflows"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(t.code,{children:"terranetes-workflows"})," resides at ",(0,i.jsx)(t.a,{href:"https://github.com/appvia/terranetes-workflows",children:"https://github.com/appvia/terranetes-workflows"})]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["Clone the repository into the Github organization and update the repository settings to ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-new-repository",children:"Github Template"}),"."]}),"\n",(0,i.jsxs)(t.li,{children:["If your organization has a central Checkov policies repository update the ",(0,i.jsx)(t.code,{children:"POLICY_SOURCE"})," and ",(0,i.jsx)(t.code,{children:"POLICY_VERSION"})," in the Github workflows, pointing to the repository and tag ",(0,i.jsx)(t.em,{children:"(tag is optional)"}),". If you don't have a central repository, its fine, the security checks will use the default rules."]}),"\n",(0,i.jsxs)(t.li,{children:["If you wish to enable ",(0,i.jsx)(t.a,{href:"https://www.infracost.io/",children:"Infracost"})," integration, add an organizational secret named ",(0,i.jsx)(t.code,{children:"ORG_INFRACOST_API_KEY"}),". On pull requests will be comment on the breakdown or the diff in predicted costs."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"current-checks",children:"Current Checks"}),"\n",(0,i.jsx)(t.p,{children:"Bundled in the template is a collection of Github workflows assessing;"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Checkov Security Rules"}),"\n",(0,i.jsx)(t.li,{children:"Code Format"}),"\n",(0,i.jsx)(t.li,{children:"Commit messages linting (consistent changelogs)"}),"\n",(0,i.jsx)(t.li,{children:"Cost Estimations (Infracost)"}),"\n",(0,i.jsx)(t.li,{children:"Module Docs (terraform-docs)"}),"\n",(0,i.jsx)(t.li,{children:"Terraform Code Validation"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Currently we only support Github actions, though the intention is to replicate the actions for Gitlab and CircleCI."}),"\n",(0,i.jsx)(t.h3,{id:"on-the-roadmap",children:"On the Roadmap"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Scheduled jobs to re-evaluate the security checks."}),"\n",(0,i.jsx)(t.li,{children:"Automatically raising pull requests when central policy is updated."}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"authoring-a-module",children:"Authoring a module"}),"\n",(0,i.jsx)(t.p,{children:"The following walks the iteration of provisioning a new terraform module using workflows."}),"\n",(0,i.jsx)(t.admonition,{type:"important",children:(0,i.jsx)(t.p,{children:"This is not a terraform tutorial, so for our purposes we will be wrapping an existing module"})}),"\n",(0,i.jsx)(t.h3,{id:"create-the-module",children:"Create the module"}),"\n",(0,i.jsxs)(t.p,{children:["Assuming you have cloned the ",(0,i.jsx)(t.a,{href:"https://github.com/appvia/terranetes-workflows",children:"repository"})," to a ",(0,i.jsx)(t.a,{href:"https://docs.github.com/en/repositories/creating-and-managing-repositories/creating-a-template-repository",children:"Github template"})," in your organization. Create a repository via the UI or the ",(0,i.jsx)(t.a,{href:"https://github.com/cli/cli",children:"Github CLI"})]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"gh repo create appvia/terraform-aws-rds --template appvia/terranetes-workflows\n"})}),"\n",(0,i.jsxs)(t.p,{children:["Ensure you've added an appropriate description, as the ",(0,i.jsx)(t.a,{href:"/terranetes-controller/cli/tnctl_search",children:"tnctl search"})," command uses the terms found here to filter on."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:'gh repo edit appvia/terraform-aws-rds --description "Terraform module used to provision a RDS database"\n'})}),"\n",(0,i.jsxs)(t.p,{children:["Alternatively you can replicate via the ",(0,i.jsx)(t.a,{href:"/terranetes-controller/cli/tnctl_workflow_create",children:"tnctl workflow create"})," command"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"tnctl workflow create terraform-aws-rds --template URL\n"})}),"\n",(0,i.jsx)(t.h3,{id:"adding-the-code",children:"Adding the code"}),"\n",(0,i.jsx)(t.p,{children:"Your are now ready to start adding the terraform code. Open the branch and pull request"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-shell",children:"git checkout -b feat_adding_code\n# add code and commit\ngh pr create\n"})}),"\n",(0,i.jsx)(t.p,{children:"Github actions will assess, review and update the pull requests with appropriate comments."}),"\n",(0,i.jsx)(t.h3,{id:"publish-the-artifact",children:"Publish the artifact"}),"\n",(0,i.jsxs)(t.p,{children:["By default all tags ",(0,i.jsx)(t.code,{children:"v[SEMVER]"})," automatically create a Github release and changelog. Assuming the [tnctl search](docs/terranetes-controller/cli/tnctl_search.md] is using your Github organization as a source the artifact is now immediately searchable."]}),"\n",(0,i.jsxs)(t.p,{children:["For public repositories the Terraform registry offers a nice solution to central point to distribute, view and search for resources. At present you must perform this on a per repository basis. Go to ",(0,i.jsx)(t.a,{href:"https://registry.terraform.io/sign-in",children:"https://registry.terraform.io/sign-in"})]}),"\n",(0,i.jsx)(t.p,{children:"For private repositories take a look at"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/outsideris/citizen",children:"https://github.com/outsideris/citizen"})}),"\n",(0,i.jsx)(t.li,{children:(0,i.jsx)(t.a,{href:"https://github.com/SwissArmyRonin/terraform-aws-registry",children:"https://github.com/SwissArmyRonin/terraform-aws-registry"})}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"find-the-artifact",children:"Find the artifact"}),"\n",(0,i.jsxs)(t.p,{children:["The release should now be available from your Github organization ",(0,i.jsx)(t.code,{children:"tnctl search rds"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var i=r(6540);const n={},o=i.createContext(n);function s(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);