"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[3833],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)r=a[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var c=n.createContext({}),s=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,m=d["".concat(c,".").concat(f)]||d[f]||p[f]||a;return r?n.createElement(m,l(l({ref:t},u),{},{components:r})):n.createElement(m,l({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=r.length,l=new Array(a);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,l[1]=i;for(var s=2;s<a;s++)l[s]=r[s];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3826:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const a={title:"tnctl build"},l=void 0,i={unversionedId:"cli/tnctl_build",id:"cli/tnctl_build",title:"tnctl build",description:"tnctl build",source:"@site/docs/terranetes-controller/cli/tnctl_build.md",sourceDirName:"cli",slug:"/cli/tnctl_build",permalink:"/terranetes-controller/cli/tnctl_build",draft:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/cli/tnctl_build.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1681469322,formattedLastUpdatedAt:"Apr 14, 2023",frontMatter:{title:"tnctl build"},sidebar:"tutorialSidebar",previous:{title:"tnctl approve",permalink:"/terranetes-controller/cli/tnctl_approve"},next:{title:"tnctl completion",permalink:"/terranetes-controller/cli/tnctl_completion"}},c={},s=[{value:"tnctl build",id:"tnctl-build",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"tnctl-build"},"tnctl build"),(0,o.kt)("p",null,"Can be used to package up the terraform module for consumption"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Build is used to automatically generate a compatible terraform\nconfiguration from a given terraform module. The source for the\nmodule can be a local directory, a git repository, s3 bucket or\nso forth. As long as you have the credentials and required CLI\nbinaries installed."),(0,o.kt)("p",null,"Generate a terraform configuration a Github repository\n$ tnctl build github.com/terraform-aws-modules/terraform-aws-vpc"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tnctl build SOURCE [OPTIONS] [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --enable-auto-approval     Automatically approve the configuration\n      --enable-defaults          Indicates any defaults with values from the terraform module are included (default true)\n      --enable-drift-detection   Detect drift in the configuration (default true)\n      --enable-sensitive         Indicates any sensitive variables from the module should be placed into secrets (default true)\n  -h, --help                     help for build\n      --name string              The name of the configuration resource (default "test")\n      --namespace string         The namespace for the configuration (default "default")\n      --provider string          Name of the credentials provider to use\n      --secret string            Name of the secret any outputs from the resource are kept\n      --source string            The path to the terraform module (default ".")\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --config string   Path to the configuration file (default "HOME/.tnctl.yaml")\n      --verbose         Enable verbose logging\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../tnctl"},"tnctl"),"\t - Terranetes CLI tool")))}p.isMDXComponent=!0}}]);