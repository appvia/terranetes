"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([["5198"],{8803:function(e,t,n){n.r(t),n.d(t,{metadata:()=>a,contentTitle:()=>o,default:()=>u,assets:()=>l,toc:()=>c,frontMatter:()=>i});var a=JSON.parse('{"id":"admin/defaults","title":"Injecting Defaults","description":"Currently via policies platform administrators have the ability to inject both variables and or secrets into developer Configurations, common use cases","source":"@site/docs/terranetes-controller/admin/defaults.md","sourceDirName":"admin","slug":"/admin/defaults","permalink":"/terranetes-controller/admin/defaults","draft":false,"unlisted":false,"editUrl":"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/admin/defaults.md","tags":[],"version":"current","lastUpdatedBy":"Kashif Saadat","lastUpdatedAt":1732124170000,"sidebarPosition":5,"frontMatter":{"sidebar_position":5},"sidebar":"tutorialSidebar","previous":{"title":"Expose Costs","permalink":"/terranetes-controller/admin/costs"},"next":{"title":"Drift Detection","permalink":"/terranetes-controller/admin/drift"}}'),s=n("5893"),r=n("65");let i={sidebar_position:5},o="Injecting Defaults",l={},c=[{value:"Variables",id:"variables",level:2},{value:"Secrets",id:"secrets",level:2}];function d(e){let t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"injecting-defaults",children:"Injecting Defaults"})}),"\n",(0,s.jsx)(t.p,{children:"Currently via policies platform administrators have the ability to inject both variables and or secrets into developer Configurations, common use cases"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Removing the administrative headache from the developers around which values to use, or enforcing specific organizational defaults on upstream modules."}),"\n",(0,s.jsx)(t.li,{children:"Sharing credentials, tokens across an collection of Configurations, for example access to private repositories."}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"variables",children:"Variables"}),"\n",(0,s.jsx)(t.p,{children:"Default environments provide the ability to inject environment-specific variables into a configuration based on a selector. An example might be:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Adding environment-specific options (e.g. VPC ID, tags, etc), elements that you don't want developers to have to deal with"}),"\n",(0,s.jsx)(t.li,{children:"Adding project-specific tags (e.g. cost center codes, project ID, etc)"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"You can configure these via a Policy resource. For example:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"apiVersion: terraform.appvia.io/v1alpha1\nkind: Policy\nmetadata:\n  name: environment-defaults\nspec:\n  defaults:\n    # Can be used to filter on configuration module sources\n    modules:\n      - <REGEX>\n    namespace:\n      # Match on namespace labels\n      matchLabels:\n        kubernetes.io/metadata.name: hello\n      # Use expressions to match on namespace labels\n      matchExpressions:\n        - key: kubernetes.io/metadata.name\n          operator: Exists\n    variables:\n      environment: dev\n"})}),"\n",(0,s.jsx)(t.h2,{id:"secrets",children:"Secrets"}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"This feature is only available from v0.3.15 onwards"})}),"\n",(0,s.jsx)(t.p,{children:"A defaults policy can also be used to inject secrets into a job. A common use case would be for the platform team to provide transparent authentication. Lets take the following example."}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"We have a number of private repositories we want to allow the developers to consume."}),"\n",(0,s.jsx)(t.li,{children:"We don't want the developers to have to deal with authenticating to these modules and thus the feature should be transparent to them."}),"\n",(0,s.jsx)(t.li,{children:"We have already create a kubernetes secret in the controller namespace containing a ssh_key or personal access token used to source the modules."}),"\n",(0,s.jsx)(t.li,{children:"We need to setup a policy which injects these secrets into the job so developers don't need to private authentication themselves."}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-yaml",children:"apiVersion: terraform.appvia.io/v1alpha1\nkind: Policy\nmetadata:\n  name: default-authentication\nspec:\n  defaults:\n    # Can be used to filter on configuration module sources\n    modules:\n      - github.com/appvia/terraform-aws-myprivaterepo:.*\n    namespace:\n      # Use expressions to match on namespace labels\n      matchExpressions:\n        - key: kubernetes.io/metadata.name\n          operator: Exists\n    secrets:\n      - auth_key\n"})}),"\n",(0,s.jsx)(t.admonition,{type:"caution",children:(0,s.jsxs)(t.p,{children:["Note, terranetes controller had a bug prior to v0.3.30 in regard to default secrets. The ",(0,s.jsx)(t.code,{children:"setup"})," stage, which is responsible retrieving the ",(0,s.jsx)(t.code,{children:"spec.module"})," (terraform code) did not have access to the secret; thus if your using the feature to support private repository access, you'll have issues in the delete. This was fixed ",(0,s.jsx)(t.a,{href:"https://github.com/appvia/terranetes-controller/pull/812",children:"here"})]})})]})}function u(e={}){let{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65:function(e,t,n){n.d(t,{Z:function(){return o},a:function(){return i}});var a=n(7294);let s={},r=a.createContext(s);function i(e){let t=a.useContext(r);return a.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(r.Provider,{value:t},e.children)}}}]);