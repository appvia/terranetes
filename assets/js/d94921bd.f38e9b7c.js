"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[6686],{7417:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>n,contentTitle:()=>c,default:()=>l,frontMatter:()=>a,metadata:()=>p,toc:()=>d});var t=r(4848),i=r(8453);const a={title:"cloudresources.terraform.appvia.io",linkTitle:"CloudResource",sidebar_position:1},c="CloudResource",p={id:"reference/cloudresources.terraform.appvia.io",title:"cloudresources.terraform.appvia.io",description:"CloudResource is the schema for terraform definitions in terraform controller",source:"@site/docs/terranetes-controller/reference/cloudresources.terraform.appvia.io.md",sourceDirName:"reference",slug:"/reference/cloudresources.terraform.appvia.io",permalink:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",draft:!1,unlisted:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/reference/cloudresources.terraform.appvia.io.md",tags:[],version:"current",lastUpdatedBy:"Rohith Jayawardene",lastUpdatedAt:1730306116e3,sidebarPosition:1,frontMatter:{title:"cloudresources.terraform.appvia.io",linkTitle:"CloudResource",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"API Reference",permalink:"/terranetes-controller/category/api-reference"},next:{title:"configurations.terraform.appvia.io",permalink:"/terranetes-controller/reference/configurations.terraform.appvia.io"}},n={},d=[];function o(e){const s={a:"a",h1:"h1",header:"header",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"cloudresource",children:"CloudResource"})}),"\n",(0,t.jsx)("p",{class:"crd-description",children:"CloudResource is the schema for terraform definitions in terraform controller"}),"\n",(0,t.jsxs)("dl",{class:"crd-meta",children:[(0,t.jsx)("dt",{class:"fullname",children:"Full name:"}),(0,t.jsx)("dd",{class:"fullname",children:"cloudresources.terraform.appvia.io"}),(0,t.jsx)("dt",{class:"groupname",children:"Group:"}),(0,t.jsx)("dd",{class:"groupname",children:"terraform.appvia.io"}),(0,t.jsx)("dt",{class:"singularname",children:"Singular name:"}),(0,t.jsx)("dd",{class:"singularname",children:"cloudresource"}),(0,t.jsx)("dt",{class:"pluralname",children:"Plural name:"}),(0,t.jsx)("dd",{class:"pluralname",children:"cloudresources"}),(0,t.jsx)("dt",{class:"scope",children:"Scope:"}),(0,t.jsx)("dd",{class:"scope",children:"Namespaced"}),(0,t.jsx)("dt",{class:"versions",children:"Versions:"}),(0,t.jsx)("dd",{class:"versions",children:(0,t.jsx)("a",{class:"version",href:"#v1alpha1",title:"Show schema for version v1alpha1",children:"v1alpha1"})})]}),"\n",(0,t.jsxs)("div",{class:"crd-schema-version",children:[(0,t.jsx)("h2",{id:"v1alpha1",children:"Version v1alpha1"}),(0,t.jsx)("h3",{id:"property-details-v1alpha1",children:"Properties"}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.apiVersion",children:".apiVersion"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsxs)("p",{children:["APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: ",(0,t.jsx)("a",{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",children:(0,t.jsx)(s.a,{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",children:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"})})]})})]})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.kind",children:".kind"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsxs)("p",{children:["Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: ",(0,t.jsx)("a",{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",children:(0,t.jsx)(s.a,{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",children:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"})})]})})]})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.metadata",children:".metadata"})}),(0,t.jsx)("div",{class:"property-body",children:(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})})})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec",children:".spec"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"CloudResourceSpec defines the desired state of a terraform"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.auth",children:".spec.auth"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Auth is used to configure any options required when the source of the terraform module is private or requires credentials to retrieve. This could be SSH keys or git user/pass or AWS credentials for an s3 bucket."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.auth.name",children:".spec.auth.name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"name is unique within a namespace to reference a secret resource."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.auth.namespace",children:".spec.auth.namespace"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"namespace defines the space within which the secret name must be unique."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.enableAutoApproval",children:".spec.enableAutoApproval"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"boolean"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"EnableAutoApproval when enabled indicates the configuration does not need to be manually approved. On a change to the configuration, the controller will automatically approve the configuration. Note it still needs to adhere to any checks or policies."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.enableDriftDetection",children:".spec.enableDriftDetection"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"boolean"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"EnableDriftDetection when enabled run periodic reconciliation configurations looking for any drift between the expected and current state. If any drift is detected the status is changed and a kubernetes event raised."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.plan",children:".spec.plan"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"object"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Plan is the reference to the plan which this cloud resource is associated with. This field is required, and needs both the name and version the plan revision to use"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.plan.name",children:".spec.plan.name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is the name of the plan this configuration is associated with"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.plan.revision",children:".spec.plan.revision"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Revision is the revision of the plan this configuration is associated with"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.providerRef",children:".spec.providerRef"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ProviderRef is the reference to the provider which should be used to execute this configuration."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.providerRef.name",children:".spec.providerRef.name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is the name of the provider which contains the credentials to use for this configuration."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.providerRef.namespace",children:".spec.providerRef.namespace"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Namespace is the namespace of the provider itself."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.terraformVersion",children:".spec.terraformVersion"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"TerraformVersion provides the ability to override the default terraform version. Before changing this field its best to consult with platform administrator. As the value of this field is used to change the tag of the terraform container image."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom",children:".spec.valueFrom"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"array"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ValueFromSource is a collection of value from sources, where the source of the value is taken from a secret"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom[*]",children:".spec.valueFrom[*]"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ValueFromSource defines a value which is taken from a secret"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom[*].context",children:".spec.valueFrom[*].context"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Context is the context is the name of the terraform context where the value should be retrieved from"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom[*].key",children:".spec.valueFrom[*].key"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Key is the key in the secret which we should used for the value"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom[*].name",children:".spec.valueFrom[*].name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is the name which we use when injecting the value into the terraform code i.e. the secret may contain data.DB_HOST but you call this database_hostname. Note, for backwards compatiability if no name is provided, we using the key at the name"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom[*].optional",children:".spec.valueFrom[*].optional"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"boolean"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Optional indicates the secret can be optional, i.e if the secret does not exist, or the key is not contained in the secret, we ignore the error"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.valueFrom[*].secret",children:".spec.valueFrom[*].secret"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Secret is the name of the secret in the configuration namespace"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.variables",children:".spec.variables"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Variables provides the inputs for the terraform module itself. These are passed to the terraform executor and used to execute the plan, apply and destroy phases."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.writeConnectionSecretToRef",children:".spec.writeConnectionSecretToRef"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"WriteConnectionSecretToRef is the name for a secret. On execution of the terraform module any module outputs are written to this secret. The outputs are automatically uppercased and ready to be consumed as environment variables. WriteConnectionSecretRef is the secret where the terraform outputs will be written."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.writeConnectionSecretToRef.keys",children:".spec.writeConnectionSecretToRef.keys"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"array"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Keys is a collection of name used to filter the terraform output. By default all keys from the output of the terraform state are written to the connection secret. Here we can define exactly which keys we want from that output."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.writeConnectionSecretToRef.keys[*]",children:".spec.writeConnectionSecretToRef.keys[*]"})}),(0,t.jsx)("div",{class:"property-body",children:(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})})})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.writeConnectionSecretToRef.name",children:".spec.writeConnectionSecretToRef.name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is the of the secret where you want to the terraform output to be written. The terraform outputs will be written to the secret as a key value pair. All are uppercased can read to be consumed by the workload."})})]})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status",children:".status"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"CloudResourceStatus defines the observed state of a terraform"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions",children:".status.conditions"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"array"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Conditions represents the observations of the resource\u2019s current state."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*]",children:".status.conditions[*]"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Condition is the current observed condition of some aspect of a resource"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].detail",children:".status.conditions[*].detail"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Detail is any additional human-readable detail to understand this condition, for example, the full underlying error which caused an issue"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].lastTransitionTime",children:".status.conditions[*].lastTransitionTime"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].message",children:".status.conditions[*].message"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Message is a human readable message indicating details about the transition. This may be an empty string."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].name",children:".status.conditions[*].name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is a human-readable name for this condition."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].observedGeneration",children:".status.conditions[*].observedGeneration"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].reason",children:".status.conditions[*].reason"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Reason contains a programmatic identifier indicating the reason for the condition\u2019s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].status",children:".status.conditions[*].status"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Status of the condition, one of True, False, Unknown."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].type",children:".status.conditions[*].type"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Type of condition in CamelCase or in foo.example.com/CamelCase. \u2014 Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationName",children:".status.configurationName"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ConfigurationName is the of the configuration this cloudresource is managing on behalf of"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus",children:".status.configurationStatus"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Configuration is the state taken from the underlying configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions",children:".status.configurationStatus.conditions"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"array"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Conditions represents the observations of the resource\u2019s current state."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*]",children:".status.configurationStatus.conditions[*]"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Condition is the current observed condition of some aspect of a resource"})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].detail",children:".status.configurationStatus.conditions[*].detail"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Detail is any additional human-readable detail to understand this condition, for example, the full underlying error which caused an issue"})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].lastTransitionTime",children:".status.configurationStatus.conditions[*].lastTransitionTime"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].message",children:".status.configurationStatus.conditions[*].message"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Message is a human readable message indicating details about the transition. This may be an empty string."})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].name",children:".status.configurationStatus.conditions[*].name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is a human-readable name for this condition."})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].observedGeneration",children:".status.configurationStatus.conditions[*].observedGeneration"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance."})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].reason",children:".status.configurationStatus.conditions[*].reason"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Reason contains a programmatic identifier indicating the reason for the condition\u2019s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty."})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].status",children:".status.configurationStatus.conditions[*].status"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Status of the condition, one of True, False, Unknown."})})]})]}),(0,t.jsxs)("div",{class:"property depth-4",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.conditions[*].type",children:".status.configurationStatus.conditions[*].type"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Type of condition in CamelCase or in foo.example.com/CamelCase. \u2014 Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.costs",children:".status.configurationStatus.costs"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Costs is the predicted costs of this configuration. Note this field is only populated when the integration has been configured by the administrator."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.costs.enabled",children:".status.configurationStatus.costs.enabled"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"boolean"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Enabled indicates if the cost integration was enabled when this configuration was last executed."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.costs.hourly",children:".status.configurationStatus.costs.hourly"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Hourly is the hourly estimated cost of the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.costs.monthly",children:".status.configurationStatus.costs.monthly"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Monthly is the monthly estimated cost of the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.driftTimestamp",children:".status.configurationStatus.driftTimestamp"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"DriftTimestamp is the timestamp of the last drift detection"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.lastReconcile",children:".status.configurationStatus.lastReconcile"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastReconcile describes the generation and time of the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.lastReconcile.generation",children:".status.configurationStatus.lastReconcile.generation"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Generation is the generation reconciled on the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.lastReconcile.time",children:".status.configurationStatus.lastReconcile.time"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Time is the last time the resource was reconciled"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.lastSuccess",children:".status.configurationStatus.lastSuccess"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastSuccess descibes the generation and time of the last reconciliation which resulted in a Success status"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.lastSuccess.generation",children:".status.configurationStatus.lastSuccess.generation"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Generation is the generation reconciled on the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.lastSuccess.time",children:".status.configurationStatus.lastSuccess.time"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Time is the last time the resource was reconciled"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.resourceStatus",children:".status.configurationStatus.resourceStatus"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ResourceStatus indicates the status of the resources and if the resources are insync with the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.resources",children:".status.configurationStatus.resources"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Resources is the number of managed cloud resources which are currently under management. This field is taken from the terraform state itself."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.configurationStatus.terraformVersion",children:".status.configurationStatus.terraformVersion"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"TerraformVersion is the version of terraform which was last used to run this configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.costs",children:".status.costs"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Costs is the predicted costs of this configuration. Note this field is only populated when the integration has been configured by the administrator."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.costs.enabled",children:".status.costs.enabled"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"boolean"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Enabled indicates if the cost integration was enabled when this configuration was last executed."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.costs.hourly",children:".status.costs.hourly"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Hourly is the hourly estimated cost of the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.costs.monthly",children:".status.costs.monthly"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Monthly is the monthly estimated cost of the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastReconcile",children:".status.lastReconcile"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastReconcile describes the generation and time of the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastReconcile.generation",children:".status.lastReconcile.generation"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Generation is the generation reconciled on the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastReconcile.time",children:".status.lastReconcile.time"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Time is the last time the resource was reconciled"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastSuccess",children:".status.lastSuccess"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastSuccess descibes the generation and time of the last reconciliation which resulted in a Success status"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastSuccess.generation",children:".status.lastSuccess.generation"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Generation is the generation reconciled on the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastSuccess.time",children:".status.lastSuccess.time"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Time is the last time the resource was reconciled"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.resourceStatus",children:".status.resourceStatus"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ResourceStatus indicates the status of the resources and if the resources are insync with the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.resources",children:".status.resources"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Resources is the number of managed cloud resources which are currently under management. This field is taken from the terraform state itself."})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.updateAvailable",children:".status.updateAvailable"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"UpdateAvailable indicates if there is a new version of the plan available"})})]})]})]})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(o,{...e})}):o(e)}},8453:(e,s,r)=>{r.d(s,{R:()=>c,x:()=>p});var t=r(6540);const i={},a=t.createContext(i);function c(e){const s=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function p(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(a.Provider,{value:s},e.children)}}}]);