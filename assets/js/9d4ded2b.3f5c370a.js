"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[5926],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)r=l[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var i=n.createContext({}),s=function(e){var t=n.useContext(i),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(i.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,l=e.originalType,i=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(r),f=o,y=d["".concat(i,".").concat(f)]||d[f]||p[f]||l;return r?n.createElement(y,c(c({ref:t},u),{},{components:r})):n.createElement(y,c({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=r.length,c=new Array(l);c[0]=d;var a={};for(var i in t)hasOwnProperty.call(t,i)&&(a[i]=t[i]);a.originalType=e,a.mdxType="string"==typeof e?e:o,c[1]=a;for(var s=2;s<l;s++)c[s]=r[s];return n.createElement.apply(null,c)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4473:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>i,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>a,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const l={title:"tnctl retry cloudresource"},c=void 0,a={unversionedId:"cli/tnctl_retry_cloudresource",id:"cli/tnctl_retry_cloudresource",title:"tnctl retry cloudresource",description:"tnctl retry cloudresource",source:"@site/docs/terranetes-controller/cli/tnctl_retry_cloudresource.md",sourceDirName:"cli",slug:"/cli/tnctl_retry_cloudresource",permalink:"/terranetes-controller/cli/tnctl_retry_cloudresource",draft:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/cli/tnctl_retry_cloudresource.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1708601991,formattedLastUpdatedAt:"Feb 22, 2024",frontMatter:{title:"tnctl retry cloudresource"},sidebar:"tutorialSidebar",previous:{title:"tnctl retry",permalink:"/terranetes-controller/cli/tnctl_retry"},next:{title:"tnctl retry configuration",permalink:"/terranetes-controller/cli/tnctl_retry_configuration"}},i={},s=[{value:"tnctl retry cloudresource",id:"tnctl-retry-cloudresource",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:s};function p(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"tnctl-retry-cloudresource"},"tnctl retry cloudresource"),(0,o.kt)("p",null,"Attempts to restart a cloud resource"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"By default a Configuration is only run on a change to the specification. Its\nuseful however to be able to restart the process without changing the\nspec - i.e. the credentials were incorrect and out-of-band error occurred or\nso forth."),(0,o.kt)("p",null,"This command will restart the process by tagging the configuration with a\nannotation. By default the restarted process will be watched for logs."),(0,o.kt)("p",null,"Restart the Configuration:\n$ tnctl retry NAME"),(0,o.kt)("p",null,"Restart the Configuration but do not watch the logs:\n$ tnctl retry NAME --watch=false"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tnctl retry cloudresource [OPTIONS] NAME [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -h, --help               help for cloudresource\n  -n, --namespace string   The namespace the resource resides (default "default")\n  -w, --watch              Watch the logs after restarting the resource (default true)\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --config string   Path to the configuration file (default "HOME/.tnctl.yaml")\n      --verbose         Enable verbose logging\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../tnctl_retry"},"tnctl retry"),"\t - Attempts to trigger the resource to retry")))}p.isMDXComponent=!0}}]);