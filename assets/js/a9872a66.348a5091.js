"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([["9162"],{7823:function(e,r,n){n.r(r),n.d(r,{metadata:()=>i,contentTitle:()=>o,default:()=>h,assets:()=>c,toc:()=>l,frontMatter:()=>a});var i=JSON.parse('{"id":"admin/cloudresource","title":"Cloud Resources","description":"This feature is only available from >= v0.4.0 releases","source":"@site/docs/terranetes-controller/admin/cloudresource.md","sourceDirName":"admin","slug":"/admin/cloudresource","permalink":"/terranetes-controller/admin/cloudresource","draft":false,"unlisted":false,"editUrl":"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/admin/cloudresource.md","tags":[],"version":"current","lastUpdatedBy":"dependabot[bot]","lastUpdatedAt":1745161988000,"sidebarPosition":4,"frontMatter":{"sidebar_position":4,"sidebar_class_name":"green"},"sidebar":"tutorialSidebar","previous":{"title":"Contexts","permalink":"/terranetes-controller/admin/contexts"},"next":{"title":"Observability","permalink":"/terranetes-controller/category/observability"}}'),s=n("5893"),t=n("65");let a={sidebar_position:4,sidebar_class_name:"green"},o="Cloud Resources",c={},l=[{value:"What are Revisions?",id:"what-are-revisions",level:2},{value:"Revision specification?",id:"revision-specification",level:2},{value:"Plan",id:"plan",level:3},{value:"Inputs",id:"inputs",level:3},{value:"Configuration",id:"configuration",level:3},{value:"How to create Revisions?",id:"how-to-create-revisions",level:2},{value:"How to validate a Revision?",id:"how-to-validate-a-revision",level:2}];function d(e){let r={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(r.header,{children:(0,s.jsx)(r.h1,{id:"cloud-resources",children:"Cloud Resources"})}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsx)(r.p,{children:"This feature is only available from >= v0.4.0 releases"})}),"\n",(0,s.jsxs)(r.p,{children:["Terranetes supports two interfaces for provisioning cloud resources: ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configurations"}),", which represent the legacy implementation, and ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"}),", which offer a more managed approach. While ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configurations"})," provide a one-to-one mapping to the Terraform module, ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"})," selectively expose attributes, thereby reducing the complexity for users and ensuring consistency with established standards."]}),"\n",(0,s.jsx)(r.admonition,{type:"info",children:(0,s.jsxs)(r.p,{children:["Note that, although the user-facing interface is the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResource"}),", a managed ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," is created by the controller behind the scenes. It is essential to understand that ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"})," serve as a means of creating a managed ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"}),"."]})}),"\n",(0,s.jsx)(r.h2,{id:"what-are-revisions",children:"What are Revisions?"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"})," are the templates for ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"}),", each of which is a versioned asset that has been curated and tested against, containing the defaults required by the organization and exposing only the functionality that is contextually relevant. The key aspects of ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"})," are:"]}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"})," reference a terraform module."]}),"\n",(0,s.jsx)(r.li,{children:"They contain all the default options that the platform wants to set in the module."}),"\n",(0,s.jsx)(r.li,{children:"They contain all the options that they want to expose to the consumer."}),"\n",(0,s.jsx)(r.li,{children:"Versions can track the upstream terraform module, or move independently of it."}),"\n",(0,s.jsxs)(r.li,{children:["All ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"})," reference back to a ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revision"})," in the cluster."]}),"\n",(0,s.jsxs)(r.li,{children:["To upgrade a ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResource"}),", the consumer updates the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revision"})," it points to."]}),"\n"]}),"\n",(0,s.jsxs)(r.p,{children:["The following diagram illustrates the relationships between Plans (a collection of ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"}),"), ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"}),", and the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," it manages."]}),"\n",(0,s.jsx)("img",{src:"/img/cloudresources.png"}),"\n",(0,s.jsx)(r.h2,{id:"revision-specification",children:"Revision specification?"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"})," are composed of ",(0,s.jsx)(r.strong,{children:"three"})," primary sections"]}),"\n",(0,s.jsx)(r.h3,{id:"plan",children:"Plan"}),"\n",(0,s.jsx)(r.p,{children:"Describes the metadata associated with the Revisions; the version, description, categories, and so forth."}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"spec:\n  ## Defines membership in a package\n  plan:\n    ## Is the name of the package we are a part of\n    name: fake\n    ## Is a collection of categories\n    categories: [mysql, aws, fake]\n    ## Is a description for what this plan provides\n    description: Provides a dummy terraform module for testing\n    ## Is the version of the package\n    revision: v0.0.3\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"name"}),": is the most critical field here, as all ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"})," are grouped by this field. ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revisions"})," with the same ",(0,s.jsx)(r.code,{children:"spec.plan.name"})," are logically grouped into a ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/plans.terraform.appvia.io",children:"Plan"}),". Plans order these Revisions using SemVer. So when a ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResource"})," references a Plan ",(0,s.jsx)(r.code,{children:"database"}),", without specifying a version; it looks up the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/plans.terraform.appvia.io",children:"Plan"})," and retrieves the latest version. If it specifies a version, it looks up the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/plans.terraform.appvia.io",children:"Plan"})," and checks if a ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revision"})," of said version exists."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"categories"}),": is a collection of tags associated with the revision, these are user-facing and primarily used for searching."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"description"}),": provides a human-readable description of the intended use for the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revision"})]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"revision"}),": is the SemVer version associated with this revision."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"inputs",children:"Inputs"}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io#v1alpha1-.spec.configuration",children:"Inputs"})," are the options the platform team wants to expose to the consumers."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"spec:\n  ## Is a list of inputs the user is permitted to override\n  inputs:\n    - key: sentence\n      description: Is a sentence we want to print\n      required: true\n      default:\n        value: hello from second additional\n    - key: vpc_id\n      description: Hello\n    - key: list\n      description: A list of names\n      default:\n        values: [a, b, c]\n"})}),"\n",(0,s.jsxs)(r.ul,{children:["\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"key"}),": (required) maps to the terraform variable within the module the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revision"})," is backing."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"description"}),": (required) provides a human-readable description to the variable."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"required"}),": (optional) indicates if the user MUST specify a value."]}),"\n",(0,s.jsxs)(r.li,{children:[(0,s.jsx)(r.strong,{children:"default.value"}),": (optional) can be a string, number, list, or map and is used as the default value for the variable."]}),"\n"]}),"\n",(0,s.jsx)(r.h3,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(r.p,{children:["The last section provides a template to the ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"}),", determining the module source, default values, enabled features, and so forth."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-yaml",children:"spec:\n  configuration:\n    ## Using a public repository\n    module: https://github.com/appvia/terranetes-controller.git//test/e2e/assets/terraform/dummy?ref=master\n    ## Where to write any secrets\n    writeConnectionSecretToRef:\n      name: outputs\n"})}),"\n",(0,s.jsxs)(r.p,{children:["Hence, the managed ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/configurations.terraform.appvia.io",children:"Configuration"})," is a composite of this section and the optional inputs detailed above."]}),"\n",(0,s.jsx)(r.h2,{id:"how-to-create-revisions",children:"How to create Revisions?"}),"\n",(0,s.jsxs)(r.p,{children:["The process of creating a ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/revisions.terraform.appvia.io",children:"Revision"})," is a straightforward one, as it is a standard Custom Resource Definition (CRD). This can be accomplished either manually or by utilizing the ",(0,s.jsx)(r.a,{href:"../../cli/tnctl_create_revision/",children:"tnctl create revision"})," command, which simplifies the creation process."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:"tnctl create revision https://github.com/terraform-aws-modules/terraform-aws-rds?ref=v5.9.0\n"})}),"\n",(0,s.jsx)(r.h2,{id:"how-to-validate-a-revision",children:"How to validate a Revision?"}),"\n",(0,s.jsxs)(r.p,{children:["In the context of utilizing ",(0,s.jsx)(r.a,{href:"/terranetes-controller/reference/cloudresources.terraform.appvia.io",children:"CloudResources"}),", ensuring the provision of a validated and reliable asset to the end-user is a critical aspect of the responsibility model. To facilitate this process, Terranetes provides ",(0,s.jsx)(r.a,{href:"/terranetes-controller/cli/tnctl_verify_revision",children:"tnctl verify revision"})," command."]}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-shell",children:'$ tnctl verify revision revision.yaml\n? Input identifier is a mandatory input, what should it\'s value be? test\n\uD83D\uDD30 Validating Revision Syntax\n   \u25AB\uFE0F The Revision CRD is syntactically correct with no errors found             \uD83D\uDFE2\n\uD83D\uDD30 Validating Revision Specification\n   \u25AB\uFE0F The Revision does not have any categories defined                          \uD83D\uDFE0\n   \u25AB\uFE0F The Revision has a description defined                                     \uD83D\uDFE2\n   \u25AB\uFE0F The Revision has the default description defined                           \uD83D\uDFE0\n   \u25AB\uFE0F The Revision has a changelog defined                                       \uD83D\uDFE2\n   \u25AB\uFE0F The Revision has the default changelog defined                             \uD83D\uDFE0\n\uD83D\uDD30 Validating Revision Inputs\n   \u25AB\uFE0F Checking input: backup_window                                              \uD83D\uDFE2\n   \u25AB\uFE0F Checking input: allocated_storage                                          \uD83D\uDFE2\n   \u25AB\uFE0F Checking input: identifier                                                 \uD83D\uDFE2\n\uD83D\uDD30 Retrieving Checkov Version\n   \u25AB\uFE0F Discovered Checkov version: "bridgecrew/checkov:2.3.291"                   \uD83D\uDFE2\n\uD83D\uDD30 Retrieving Terraform Version\n   \u25AB\uFE0F Discovered Terraform version: "hashicorp/terraform:1.5.6"                  \uD83D\uDFE2\n\uD83D\uDD30 Validating Module Policy permits Revision\n   \u25AB\uFE0F Found 1 module constraint policies                                         \uD83D\uDFE2\n   \u25AB\uFE0F Revision is not permitted by any policy                                    \uD83D\uDD34\n\uD83D\uDD30 Validating Cloud Credentials Provider\n   \u25AB\uFE0F Checking if we providers associated with the revision                      \uD83D\uDFE2\n   \u25AB\uFE0F Provider referenced exists in cluster                                      \uD83D\uDFE2\n\uD83D\uDD30 Validating of Context References\n   \u25AB\uFE0F Revision does not reference any values from context/s                      \uD83D\uDFE2\n\uD83D\uDD30 Validating against Checkov Security Policy\n   \u25AB\uFE0F Checkov is using the code, not the plan, consider --use-terraform-plan     \uD83D\uDFE0\n   \u25AB\uFE0F Found 1 security policies to validate against                              \uD83D\uDFE2\n   \u25AB\uFE0F Revision has passed 18 checks in policy: "checkov"                         \uD83D\uDFE2\n   \u25AB\uFE0F Check ID against documentation: https://docs.bridgecrew.io/docs            \uD83D\uDFE2\n   \u25AB\uFE0F Ensure that RDS instances have Multi-AZ enabled                            \uD83D\uDD34\n      Check ID: CKV_AWS_157\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Ensure that RDS instances have performance insights enabled                \uD83D\uDD34\n      Check ID: CKV_AWS_353\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Ensure that respective logs of Amazon Relational Database Service (Am      \uD83D\uDD34\n      Check ID: CKV_AWS_129\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Ensure that AWS database instances have deletion protection enabled        \uD83D\uDD34\n      Check ID: CKV_AWS_293\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Ensure that RDS instances has backup policy                                \uD83D\uDD34\n      Check ID: CKV_AWS_133\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Ensure that enhanced monitoring is enabled for Amazon RDS instances        \uD83D\uDD34\n      Check ID: CKV_AWS_118\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Ensure CloudWatch log groups retains logs for at least 1 year              \uD83D\uDD34\n      Check ID: CKV_AWS_338\n      Resource: module.main.module.db_instance.aws_cloudwatch_log_group.this\n   \u25AB\uFE0F Ensure RDS instance with copy tags to snapshots is enabled                 \uD83D\uDD34\n      Check ID: CKV2_AWS_60\n      Resource: module.main.module.db_instance.aws_db_instance.this[0]\n   \u25AB\uFE0F Revision will fail on security policy: "checkov"                           \uD83D\uDD34\n\n\uD83D\uDFE2 Passed: 8, Warning: 4\n\uD83D\uDD34 Failed: 10\n[Error]: revision failed verification checks\n'})}),"\n",(0,s.jsx)(r.admonition,{type:"tip",children:(0,s.jsxs)(r.p,{children:["To ensure a comprehensive validation process, it is advisable to utilize read-only credentials and enable the ",(0,s.jsx)(r.code,{children:"--use-terraform-plan"})," flag. This approach requires standard environment variables, including AWS_ACCESS_KEY_ID and AWS_SECRET_ACCESS_KEY, to facilitate a thorough examination of the Terraform plan."]})})]})}function h(e={}){let{wrapper:r}={...(0,t.a)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},65:function(e,r,n){n.d(r,{Z:function(){return o},a:function(){return a}});var i=n(7294);let s={},t=i.createContext(s);function a(e){let r=i.useContext(t);return i.useMemo(function(){return"function"==typeof e?e(r):{...r,...e}},[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:r},e.children)}}}]);