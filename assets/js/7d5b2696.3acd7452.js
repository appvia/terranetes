"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[8362],{9476:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>i});var l=n(4848),s=n(8453);const r={title:"tnctl state clean"},c=void 0,a={id:"cli/tnctl_state_clean",title:"tnctl state clean",description:"tnctl state clean",source:"@site/docs/terranetes-controller/cli/tnctl_state_clean.md",sourceDirName:"cli",slug:"/cli/tnctl_state_clean",permalink:"/terranetes-controller/cli/tnctl_state_clean",draft:!1,unlisted:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/cli/tnctl_state_clean.md",tags:[],version:"current",lastUpdatedBy:"Kashif Saadat",lastUpdatedAt:172356019e4,frontMatter:{title:"tnctl state clean"},sidebar:"tutorialSidebar",previous:{title:"tnctl state",permalink:"/terranetes-controller/cli/tnctl_state"},next:{title:"tnctl state list",permalink:"/terranetes-controller/cli/tnctl_state_list"}},o={},i=[{value:"tnctl state clean",id:"tnctl-state-clean",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}];function d(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(t.h2,{id:"tnctl-state-clean",children:"tnctl state clean"}),"\n",(0,l.jsx)(t.p,{children:"Cleans any orphaned state, cost, config or policy secrets"}),"\n",(0,l.jsx)(t.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,l.jsx)(t.p,{children:"The clean command will clean any orphaned state, cost, config or policy secrets.\nThese are kubernetes secrets which are not associated with a configuration."}),"\n",(0,l.jsx)(t.h1,{id:"clean-all-orphaned-secrets-you-will-be-prompted-to-confirm",children:"Clean all orphaned secrets (you will be prompted to confirm)"}),"\n",(0,l.jsx)(t.p,{children:"$ tnctl state clean"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:"tnctl state clean [OPTIONS] [flags]\n"})}),"\n",(0,l.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:'      --controller-namespace string   The namespace the controller is running in (default "terraform-system")\n      --force                         Force the deletion of the secrets\n  -h, --help                          help for clean\n'})}),"\n",(0,l.jsx)(t.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,l.jsx)(t.pre,{children:(0,l.jsx)(t.code,{children:'      --config string   Path to the configuration file (default "HOME/.tnctl.yaml")\n      --verbose         Enable verbose logging\n'})}),"\n",(0,l.jsx)(t.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,l.jsxs)(t.ul,{children:["\n",(0,l.jsxs)(t.li,{children:[(0,l.jsx)(t.a,{href:"../tnctl_state",children:"tnctl state"}),"\t - Used to manage the Terraform Configuration state secrets"]}),"\n"]})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,l.jsx)(t,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var l=n(6540);const s={},r=l.createContext(s);function c(e){const t=l.useContext(r);return l.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),l.createElement(r.Provider,{value:t},e.children)}}}]);