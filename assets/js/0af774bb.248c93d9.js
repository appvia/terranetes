"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([["6692"],{7846:function(e,s,r){r.r(s),r.d(s,{metadata:()=>i,contentTitle:()=>p,default:()=>o,assets:()=>c,toc:()=>d,frontMatter:()=>n});var i=JSON.parse('{"id":"reference/plans.terraform.appvia.io","title":"plans.terraform.appvia.io","description":"Plan is the schema for the plan type","source":"@site/docs/terranetes-controller/reference/plans.terraform.appvia.io.md","sourceDirName":"reference","slug":"/reference/plans.terraform.appvia.io","permalink":"/terranetes-controller/reference/plans.terraform.appvia.io","draft":false,"unlisted":false,"editUrl":"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/reference/plans.terraform.appvia.io.md","tags":[],"version":"current","lastUpdatedBy":"Kashif Saadat","lastUpdatedAt":1732124170000,"sidebarPosition":1,"frontMatter":{"title":"plans.terraform.appvia.io","linkTitle":"Plan","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"contexts.terraform.appvia.io","permalink":"/terranetes-controller/reference/contexts.terraform.appvia.io"},"next":{"title":"policies.terraform.appvia.io","permalink":"/terranetes-controller/reference/policies.terraform.appvia.io"}}'),t=r("5893"),a=r("65");let n={title:"plans.terraform.appvia.io",linkTitle:"Plan",sidebar_position:1},p="Plan",c={},d=[];function l(e){let s={a:"a",h1:"h1",header:"header",...(0,a.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsx)(s.h1,{id:"plan",children:"Plan"})}),"\n",(0,t.jsx)("p",{class:"crd-description",children:"Plan is the schema for the plan type"}),"\n",(0,t.jsxs)("dl",{class:"crd-meta",children:[(0,t.jsx)("dt",{class:"fullname",children:"Full name:"}),(0,t.jsx)("dd",{class:"fullname",children:"plans.terraform.appvia.io"}),(0,t.jsx)("dt",{class:"groupname",children:"Group:"}),(0,t.jsx)("dd",{class:"groupname",children:"terraform.appvia.io"}),(0,t.jsx)("dt",{class:"singularname",children:"Singular name:"}),(0,t.jsx)("dd",{class:"singularname",children:"plan"}),(0,t.jsx)("dt",{class:"pluralname",children:"Plural name:"}),(0,t.jsx)("dd",{class:"pluralname",children:"plans"}),(0,t.jsx)("dt",{class:"scope",children:"Scope:"}),(0,t.jsx)("dd",{class:"scope",children:"Cluster"}),(0,t.jsx)("dt",{class:"versions",children:"Versions:"}),(0,t.jsx)("dd",{class:"versions",children:(0,t.jsx)("a",{class:"version",href:"#v1alpha1",title:"Show schema for version v1alpha1",children:"v1alpha1"})})]}),"\n",(0,t.jsxs)("div",{class:"crd-schema-version",children:[(0,t.jsx)("h2",{id:"v1alpha1",children:"Version v1alpha1"}),(0,t.jsx)("h3",{id:"property-details-v1alpha1",children:"Properties"}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.apiVersion",children:".apiVersion"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsxs)("p",{children:["APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: ",(0,t.jsx)("a",{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",children:(0,t.jsx)(s.a,{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",children:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"})})]})})]})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.kind",children:".kind"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsxs)("p",{children:["Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: ",(0,t.jsx)("a",{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",children:(0,t.jsx)(s.a,{href:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",children:"https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"})})]})})]})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.metadata",children:".metadata"})}),(0,t.jsx)("div",{class:"property-body",children:(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})})})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec",children:".spec"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"PlanSpec defines the desired state for a context"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.revisions",children:".spec.revisions"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"array"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Revisions is a collection of revision associated with this plan"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.revisions[*]",children:".spec.revisions[*]"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"PlanRevision is a reference to a revision of a plan existing in the system"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.revisions[*].name",children:".spec.revisions[*].name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is the name of the revision containing the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.spec.revisions[*].revision",children:".spec.revisions[*].revision"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Revision is the version of the revision"})})]})]}),(0,t.jsxs)("div",{class:"property depth-0",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status",children:".status"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"PlanStatus defines the observed state of a terraform"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions",children:".status.conditions"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"array"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Conditions represents the observations of the resource\u2019s current state."})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*]",children:".status.conditions[*]"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Condition is the current observed condition of some aspect of a resource"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].detail",children:".status.conditions[*].detail"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Detail is any additional human-readable detail to understand this condition, for example, the full underlying error which caused an issue"})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].lastTransitionTime",children:".status.conditions[*].lastTransitionTime"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].message",children:".status.conditions[*].message"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Message is a human readable message indicating details about the transition. This may be an empty string."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].name",children:".status.conditions[*].name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is a human-readable name for this condition."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].observedGeneration",children:".status.conditions[*].observedGeneration"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"ObservedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].reason",children:".status.conditions[*].reason"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Reason contains a programmatic identifier indicating the reason for the condition\u2019s last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].status",children:".status.conditions[*].status"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Status of the condition, one of True, False, Unknown."})})]})]}),(0,t.jsxs)("div",{class:"property depth-3",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.conditions[*].type",children:".status.conditions[*].type"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Type of condition in CamelCase or in foo.example.com/CamelCase. \u2014 Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastReconcile",children:".status.lastReconcile"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastReconcile describes the generation and time of the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastReconcile.generation",children:".status.lastReconcile.generation"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Generation is the generation reconciled on the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastReconcile.time",children:".status.lastReconcile.time"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Time is the last time the resource was reconciled"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastSuccess",children:".status.lastSuccess"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"LastSuccess descibes the generation and time of the last reconciliation which resulted in a Success status"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastSuccess.generation",children:".status.lastSuccess.generation"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"integer"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Generation is the generation reconciled on the last reconciliation"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.lastSuccess.time",children:".status.lastSuccess.time"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"string"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Time is the last time the resource was reconciled"})})]})]}),(0,t.jsxs)("div",{class:"property depth-1",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.latest",children:".status.latest"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsx)("div",{class:"property-meta",children:(0,t.jsx)("span",{class:"property-type",children:"object"})}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Latest is the latest revision from this plan"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.latest.name",children:".status.latest.name"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Name is the name of the revision containing the configuration"})})]})]}),(0,t.jsxs)("div",{class:"property depth-2",children:[(0,t.jsx)("div",{class:"property-header",children:(0,t.jsx)("h3",{class:"property-path",id:"v1alpha1-.status.latest.revision",children:".status.latest.revision"})}),(0,t.jsxs)("div",{class:"property-body",children:[(0,t.jsxs)("div",{class:"property-meta",children:[(0,t.jsx)("span",{class:"property-type",children:"string"}),(0,t.jsx)("span",{class:"property-required",children:"Required"})]}),(0,t.jsx)("div",{class:"property-description",children:(0,t.jsx)("p",{children:"Revision is the version of the revision"})})]})]})]})]})}function o(e={}){let{wrapper:s}={...(0,a.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},65:function(e,s,r){r.d(s,{Z:function(){return p},a:function(){return n}});var i=r(7294);let t={},a=i.createContext(t);function n(e){let s=i.useContext(a);return i.useMemo(function(){return"function"==typeof e?e(s):{...s,...e}},[s,e])}function p(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);