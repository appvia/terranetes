"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[2188],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function c(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},l=Object.keys(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(o=0;o<l.length;o++)r=l[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var a=o.createContext({}),i=function(e){var t=o.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):c(c({},t),e)),r},u=function(e){var t=i(e.components);return o.createElement(a.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,a=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=i(r),f=n,g=d["".concat(a,".").concat(f)]||d[f]||p[f]||l;return r?o.createElement(g,c(c({ref:t},u),{},{components:r})):o.createElement(g,c({ref:t},u))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,c=new Array(l);c[0]=d;var s={};for(var a in t)hasOwnProperty.call(t,a)&&(s[a]=t[a]);s.originalType=e,s.mdxType="string"==typeof e?e:n,c[1]=s;for(var i=2;i<l;i++)c[i]=r[i];return o.createElement.apply(null,c)}return o.createElement.apply(null,r)}d.displayName="MDXCreateElement"},6460:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>s,toc:()=>i});var o=r(7462),n=(r(7294),r(3905));const l={title:"tnctl logs cloudresource"},c=void 0,s={unversionedId:"cli/tnctl_logs_cloudresource",id:"cli/tnctl_logs_cloudresource",title:"tnctl logs cloudresource",description:"tnctl logs cloudresource",source:"@site/docs/terranetes-controller/cli/tnctl_logs_cloudresource.md",sourceDirName:"cli",slug:"/cli/tnctl_logs_cloudresource",permalink:"/terranetes-controller/cli/tnctl_logs_cloudresource",draft:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/cli/tnctl_logs_cloudresource.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1708601991,formattedLastUpdatedAt:"Feb 22, 2024",frontMatter:{title:"tnctl logs cloudresource"},sidebar:"tutorialSidebar",previous:{title:"tnctl logs",permalink:"/terranetes-controller/cli/tnctl_logs"},next:{title:"tnctl logs configuration",permalink:"/terranetes-controller/cli/tnctl_logs_configuration"}},a={},i=[{value:"tnctl logs cloudresource",id:"tnctl-logs-cloudresource",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:i};function p(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,o.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h2",{id:"tnctl-logs-cloudresource"},"tnctl logs cloudresource"),(0,n.kt)("p",null,"Displays the latest logs for the given resource"),(0,n.kt)("h3",{id:"synopsis"},"Synopsis"),(0,n.kt)("p",null,"Retrieves and follows the logs from a cloudresource or native configuration"),(0,n.kt)("p",null,"Viewing the logs for a configuration\n$ tnctl logs configuration NAME --follow"),(0,n.kt)("p",null,"Viewing the logs for a cloudresource\n$ tnctl logs cloudresource NAME --follow"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"tnctl logs cloudresource NAME [OPTIONS] [flags]\n")),(0,n.kt)("h3",{id:"options"},"Options"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'  -f, --follow             Indicates we should follow the logs\n  -h, --help               help for cloudresource\n  -n, --namespace string   The namespace of the resource (default "default")\n      --stage string       Select the stage to show logs for, else defaults to the current resource state\n      --timeout duration   The interval to wait for the logs (default 3s)\n')),(0,n.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'      --config string   Path to the configuration file (default "HOME/.tnctl.yaml")\n      --verbose         Enable verbose logging\n')),(0,n.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"../tnctl_logs"},"tnctl logs"),"\t - Displays the latest logs for the resource")))}p.isMDXComponent=!0}}]);