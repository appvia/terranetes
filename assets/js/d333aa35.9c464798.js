"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([["4769"],{7832:function(e,t,r){r.r(t),r.d(t,{metadata:()=>n,contentTitle:()=>p,default:()=>j,assets:()=>g,toc:()=>v,frontMatter:()=>f});var n=JSON.parse('{"id":"index","title":"What is Terranetes?","description":"The terranetes controller manages the life-cycle of terraform resources defined and built inside Kubernetes. This allows teams running workloads inside the cluster to self-serve application dependencies and reuse the wealth of terraform modules already written.","source":"@site/docs/terranetes-controller/index.md","sourceDirName":".","slug":"/","permalink":"/terranetes-controller/","draft":false,"unlisted":false,"editUrl":"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/index.md","tags":[],"version":"current","lastUpdatedBy":"Kashif Saadat","lastUpdatedAt":1732124170000,"sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Quick start","permalink":"/terranetes-controller/quick_start"}}'),s=r("5893"),i=r("65");r("7294");var a=r("7026");let o="features__A6O",l="featureSvg_KQKn";var c=r("6561"),d=r("4757");let u=[{title:"Self Service Cloud Resources",imageLight:"/img/index/features/self-service.svg",imageDark:"/img/index/features/self-service.svg",description:(0,s.jsx)(s.Fragment,{children:"Allows developers and teams to self-serve their application dependencies independently, while being assured they are inline of company policy."})},{title:"Enforce Security Policy Checks",imageLight:"/img/index/features/security.svg",imageDark:"/img/index/features/security.svg",description:(0,s.jsx)(s.Fragment,{children:"Platform teams may enforce technical controls to verify resources meet their security guidelines. These controls are also applied to all terraform sub-modules, to ensure nothing gets missed."})},{title:"Predicted Cost Management",imageLight:"/img/index/features/cost-estimates.svg",imageDark:"/img/index/features/cost-estimates.svg",description:(0,s.jsx)(s.Fragment,{children:"Integrates with cost management tools, allowing developers to view and manage spend more efficiently."})}];function h(e){let{title:t,imageLight:r,imageDark:n,description:i}=e,o=(0,d.ZP)(n),u=(0,d.ZP)(r);return(0,s.jsxs)("div",{className:(0,a.Z)("col col--4"),children:[(0,s.jsx)("div",{className:"text--center",children:(0,s.jsx)(c.Z,{className:l,sources:{light:u,dark:o},alt:"Feature Image"})}),(0,s.jsxs)("div",{className:"text--center padding-horiz--md",children:[(0,s.jsx)("h3",{children:t}),(0,s.jsx)("p",{children:i})]})]})}function m(){return(0,s.jsx)("section",{className:o,children:(0,s.jsx)("div",{className:"container",children:(0,s.jsx)("div",{className:"row",children:u.map((e,t)=>(0,s.jsx)(h,{...e},t))})})})}let f={sidebar_position:1},p="What is Terranetes?",g={},v=[{value:"Additional features",id:"additional-features",level:2}];function x(e){let t={h1:"h1",h2:"h2",header:"header",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"what-is-terranetes",children:"What is Terranetes?"})}),"\n",(0,s.jsx)(t.p,{children:"The terranetes controller manages the life-cycle of terraform resources defined and built inside Kubernetes. This allows teams running workloads inside the cluster to self-serve application dependencies and reuse the wealth of terraform modules already written."}),"\n",(0,s.jsx)(t.p,{children:'There\'s a number of open source controllers you could use that will run Terraform in Kubernetes. All of them deliver the developer outcome, however, none address the "consequences" of delivering that outcome in the first place; the risks, costs, security implications, the general lack of checks and balances. What sets the Terranetes controller apart is its opinion you first enable the platform team to deliver the outcome in a safe environment before it can be self-served by developers. Providing platform engineers with all the knobs, dials and levers to control and mitigate those risks is the key differentiator for Terranetes controller.'}),"\n",(0,s.jsx)(m,{}),"\n",(0,s.jsx)(t.h2,{id:"additional-features",children:"Additional features"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Drift Detection:"})," Automatically detect any upstream changes in the cloud provider and ensure the terraform state is inline with the resources it manages."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Module Security:"})," Gives platform teams the means to control which terraform modules are permitted. This enables the organization to lock down to an approved collection of modules."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Targeted Configuration:"})," Gives platform teams the ability to inject environment-specific variables into the terraform modules consumed downstream. For example, you could inject cost centers or project IDs, or environment-specific configuration like cloud tags and so forth."]}),"\n"]})]})}function j(e={}){let{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}},65:function(e,t,r){r.d(t,{Z:function(){return o},a:function(){return a}});var n=r(7294);let s={},i=n.createContext(s);function a(e){let t=n.useContext(i);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);