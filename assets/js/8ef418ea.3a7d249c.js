"use strict";(self.webpackChunkterranetes=self.webpackChunkterranetes||[]).push([[8381],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},c=Object.keys(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(n=0;n<c.length;n++)r=c[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var a=n.createContext({}),s=function(e){var t=n.useContext(a),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return n.createElement(a.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,c=e.originalType,a=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=s(r),f=o,m=p["".concat(a,".").concat(f)]||p[f]||d[f]||c;return r?n.createElement(m,i(i({ref:t},u),{},{components:r})):n.createElement(m,i({ref:t},u))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var c=r.length,i=new Array(c);i[0]=p;var l={};for(var a in t)hasOwnProperty.call(t,a)&&(l[a]=t[a]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<c;s++)i[s]=r[s];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},2720:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>d,frontMatter:()=>c,metadata:()=>l,toc:()=>s});var n=r(7462),o=(r(7294),r(3905));const c={title:"tnctl describe cloudresource"},i=void 0,l={unversionedId:"cli/tnctl_describe_cloudresource",id:"cli/tnctl_describe_cloudresource",title:"tnctl describe cloudresource",description:"tnctl describe cloudresource",source:"@site/docs/terranetes-controller/cli/tnctl_describe_cloudresource.md",sourceDirName:"cli",slug:"/cli/tnctl_describe_cloudresource",permalink:"/terranetes-controller/cli/tnctl_describe_cloudresource",draft:!1,editUrl:"https://github.com/appvia/terranetes/tree/master/docs/terranetes-controller/cli/tnctl_describe_cloudresource.md",tags:[],version:"current",lastUpdatedBy:"Rohith Jayawardene",lastUpdatedAt:1696672868,formattedLastUpdatedAt:"Oct 7, 2023",frontMatter:{title:"tnctl describe cloudresource"},sidebar:"tutorialSidebar",previous:{title:"tnctl describe",permalink:"/terranetes-controller/cli/tnctl_describe"},next:{title:"tnctl describe configuration",permalink:"/terranetes-controller/cli/tnctl_describe_configuration"}},a={},s=[{value:"tnctl describe cloudresource",id:"tnctl-describe-cloudresource",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3}],u={toc:s};function d(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"tnctl-describe-cloudresource"},"tnctl describe cloudresource"),(0,o.kt)("p",null,"Used to describe the current state of the resources"),(0,o.kt)("h3",{id:"synopsis"},"Synopsis"),(0,o.kt)("p",null,"Retrieves the definition and current state of one or more of the\nterraform configurations, displaying in a human friendly format.\nThe command also extracts any integration details which have been\nproduced by infracosts or checkov scans."),(0,o.kt)("p",null,"Describe a configuration in a namespace\n$ tnctl describe configuration -n apps NAME"),(0,o.kt)("p",null,"Describe a cloudresource in a namespace\n$ tnctl describe cloudresource -n apps NAME"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"tnctl describe cloudresource [OPTIONS] NAME [flags]\n")),(0,o.kt)("h3",{id:"options"},"Options"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'  -h, --help                 help for cloudresource\n  -n, --namespace string     Namespace of the resource/s (default "default")\n      --show-passed-checks   Indicates we should show passed checks (default true)\n')),(0,o.kt)("h3",{id:"options-inherited-from-parent-commands"},"Options inherited from parent commands"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'      --config string   Path to the configuration file (default "HOME/.tnctl.yaml")\n      --verbose         Enable verbose logging\n')),(0,o.kt)("h3",{id:"see-also"},"SEE ALSO"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"../tnctl_describe"},"tnctl describe"),"\t - Used to describe the current state of the configuration")))}d.isMDXComponent=!0}}]);